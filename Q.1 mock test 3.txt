public class Stack<T> {
    private Object[] array;
    private int top;
    private int capacity;
    
    public Stack(int size) {
        capacity = size;
        array = new Object[capacity];
        top = -1;
    }
    
    public void push(T value) {
        if (top == capacity - 1) {
            System.out.println("Stack is full. Cannot push " + value);
        } else {
            array[++top] = value;
            System.out.println(value + " pushed to the stack.");
        }
    }
    
    public T pop() {
        if (isEmpty()) {
            System.out.println("Stack is empty. Cannot pop.");
            return null;
        } else {
            T value = (T) array[top--];
            return value;
        }
    }
    
    public boolean isEmpty() {
        return (top == -1);
    }
}


public class ImpliStack {
    public static void main(String[] args) {
        Stack<Integer> stack = new Stack<>(5);
        
        stack.push(10);
        stack.push(20);
        stack.push(30);
        
        System.out.println("Is stack empty? " + stack.isEmpty());
        
        int poppedValue = stack.pop();
        System.out.println("Popped value: " + poppedValue);
        
        System.out.println("Is stack empty? " + stack.isEmpty());
    }
}
